/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   opti_fillit.c                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ldevelle <ldevelle@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/17 21:41:33 by ldevelle          #+#    #+#             */
/*   Updated: 2019/01/17 23:14:38 by ldevelle         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../../libft/libft.h"
#include <stdio.h>
#  define _RED		"\x1b[31m"
#  define _GREEN	"\x1b[32m"
#  define _YELLOW	"\x1b[33m"
#  define _BLUE		"\x1b[34m"
#  define _MAGENTA	"\x1b[35m"
#  define _CYAN		"\x1b[36m"
#  define _RESET	"\x1b[0m"

int		main(int ac, char **av)
{
	int i;
	float e;
	float div;
	float f =0;

	i = 0;
	while (atoi(av[1]) >= ++i)
	{
		e = (ft_round_upper(ft_fsqrt(i, 0) * 2) * ft_round_upper(ft_fsqrt(i, 0) * 2)) - (4 * i);
		div = e / (float)i;
		//if (e == 0)
		//	printf(_RED "p:%d\t%f\n" _RESET, i, e);
		if (div >= f)
		{
			f = div;
			printf(_CYAN "piece: %d\tBlocs libres : %d\t\t\t%f\n" _RESET, i, (int)e, div);
		}
		else if (div >= 0.7)
		{
			printf(_GREEN "piece: -> %d\tBlocs libres : %d\t\t\t%f\n" _RESET, i, (int)e, div);
		}
		else if (div >= 0.5)
				printf(_YELLOW "piece: %d\tBlocs libres : %d\t\t\t%f\n" _RESET, i, (int)e, div);
		else if (e <= 2)
				printf(_RED "piece: %d\tBlocs libres : %d\t\t\t%f\n" _RESET, i, (int)e, div);
			//else
			//	printf(_RED "p:%d\t%d\t%f\n" _RESET, i, (int)e, div);
	}
	return 0;
}
